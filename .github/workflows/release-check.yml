name: Release file check

on:
  pull_request_target:
    types: [synchronize, reopened, opened, ready_for_review]
    branches:
    - main

jobs:
  release-file-check:
    runs-on: ubuntu-latest

    outputs:
      changelog: ${{ steps.release-check.outputs.changelog }}
      status: ${{ steps.release-check.outputs.release_status }}
      change_type: ${{ steps.release-check.outputs.change_type }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: "refs/pull/${{ github.event.number }}/merge"

    - name: Release file check
      uses: ./.github/release-check-action
      id: release-check
      if: github.event.pull_request.draft == false

    - name: Fail if status is not ok
      if: ${{ steps.release-check.outputs.release_status != 'OK' }}
      run: exit 1

  get-contributor-name:
    name: Get PR info
    runs-on: ubuntu-latest

    outputs:
      contributor-name: ${{ steps.get-info.outputs.contributor-name }}

    steps:
      - uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: Get PR info
        id: get-info
        uses: ./.github/get-pr-info-action
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  read-tweet-md:
    name: Read TWEET.md
    runs-on: ubuntu-latest
    needs: [get-contributor-name, release-file-check]

    outputs:
      tweet: ${{ steps.extract.outputs.tweet }}
      card-text: ${{ steps.extract.outputs.card-text }}

    steps:
    - uses: actions/checkout@v2
      with:
        ref: "refs/pull/${{ github.event.number }}/merge"
    - name: Extract tweet message and changelog
      id: extract
      uses: ./.github/read-tweet-action
      with:
        changelog: ${{ needs.release-file-check.outputs.changelog }}
        version: "(next)"
        contributor_name: ${{ needs.get-contributor-name.outputs.contributor-name }}

  validate-tweet:
    runs-on: ubuntu-latest
    needs: read-tweet-md
    if: ${{ needs.read-tweet-md.outputs.tweet != '' }}
    steps:
      - uses: actions/checkout@v2
      - name: Validate tweet
        uses: ./.github/validate-tweet-action
        with:
          tweet: ${{ needs.read-tweet-md.outputs.tweet }}

  generate-preview:
    runs-on: ubuntu-latest
    needs: [release-file-check, read-tweet-md, get-contributor-name]
    if: always() && github.event.pull_request.draft == false

    outputs:
      url: ${{ steps.upload.outputs.url }}

    steps:
    - name: Generate Twitter card preview
      uses: strawberry-graphql/release-cards@main
      if: ${{ needs.release-file-check.outputs.status == 'OK' }}
      with:
        version: "(next)"
        contributor: ${{ needs.get-contributor-name.outputs.contributor-name }}
        description_base64: ${{ needs.read-tweet-md.outputs.card-text }}

    - name: Uploads preview
      id: upload
      if: ${{ needs.release-file-check.outputs.status == 'OK' }}
      run: |
        echo ::set-output name=url::$(curl --location --request POST "https://api.imgur.com/3/image" \
          --fail \
          --header "Authorization: Client-ID $IMGUR_CLIENT_ID" \
          --form "image=@screenshot.png;filename=screenshot.png;type=image/png" \
          | jq  --raw-output '.data.link')
      env:
        IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}

  send-comment:
    runs-on: ubuntu-latest
    needs: [release-file-check, generate-preview, read-tweet-md]
    if: always() && github.event.pull_request.draft == false

    steps:
    - uses: actions/checkout@v2
    - name: Send comment
      uses: ./.github/bot-action
      env:
        BOT_API_URL: ${{ secrets.BOT_API_URL }}
        API_SECRET: ${{ secrets.API_SECRET }}
      with:
        pr_number: ${{ github.event.number }}
        status: ${{ needs.release-file-check.outputs.status }}
        change_type: ${{ needs.release-file-check.outputs.change_type }}
        changelog_base64: ${{ needs.release-file-check.outputs.changelog }}
        release_card_url: ${{ needs.generate-preview.outputs.url }}
        tweet: ${{ needs.read-tweet-md.outputs.tweet }}
