name: Backend tests

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "strawberry/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/test.yml"

# TODO: run tests on windows

jobs:
  unit-tests:
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry
      - uses: actions/setup-python@v3.1.2
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      # TODO: move this in another test job
      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - run: npm install -g --no-package-lock --no-save pyright

      - run: poetry env use ${{ matrix.python-version }}
      - run: poetry run python --version
      - run: poetry show -v
      - run: poetry run pip freeze
      - run: poetry install
        if: steps.setup-python.outputs.cache-hit != 'true'

      - name: pytest
        run:
          poetry run pytest --cov-report xml --cov=. --showlocals -vv -m "not django"

      - uses: codecov/codecov-action@v1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  django-unit-tests:
    strategy:
      matrix:
        django: ["4.0", "3.2"]

    name: Test Django ${{ matrix.django }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry
      - uses: actions/setup-python@v3.1.2
        id: setup-python
        with:
          python-version: "3.10"
          cache: "poetry"

      - run: poetry env use python3.10
      - run: poetry install

      - name: Install django ${{ matrix.django }}
        run: poetry add --python ^3.10 django@^${{ matrix.django }}

      - name: pytest
        run:
          poetry run pytest --cov-report xml --cov=. --showlocals -vv -m django

      - uses: codecov/codecov-action@v1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
