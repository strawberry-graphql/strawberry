name: Backend tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "strawberry/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/test.yml"

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Test on ${{ matrix.python-version }} - django ${{ matrix.django }}

    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        django: [3.2, 3.1.8, 3.0.14, 2.2.20]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install -g --no-package-lock --no-save pyright
      - run: pip install poetry
      - run: poetry config experimental.new-installer false
      - name: Install dependencies
        run: poetry install
      - name: Install django ${{ matrix.django }}
        run: poetry add django==${{ matrix.django }}
      - name: pytest
        run: poetry run py.test --cov-report xml --cov=. --cov-fail-under 80 --showlocals -vv
      - uses: codecov/codecov-action@v1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  mypy:
    runs-on: ubuntu-latest
    container: python:3.9

    steps:
      - uses: actions/checkout@v2
      - run: pip install poetry
      - run: poetry config experimental.new-installer false
      - name: Install dependencies
        run: poetry install
      - run: poetry run mypy --ignore-missing-imports --config-file mypy.ini --install-types --non-interactive .
