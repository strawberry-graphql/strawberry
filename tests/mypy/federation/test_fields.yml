- case: test_field
  main: |
    import strawberry

    @strawberry.federation.type
    class User:
        name: str = strawberry.federation.field(description="Example")

    User(name="Patrick")
    User(n="Patrick")
  out: |
    main:8: error: Unexpected keyword argument "n" for "User"  [call-arg]

- case: test_all_field_usage
  main: |
    import strawberry
    from strawberry.types import Info

    def some_resolver() -> str:
        return ""

    def some_resolver_2(root: "Example") -> str:
        return ""

    @strawberry.type
    class Example:
        a: str
        b: str = strawberry.federation.field(name="b")
        c: str = strawberry.federation.field(name="c", resolver=some_resolver)
        d: str = strawberry.federation.field(resolver=some_resolver_2)

        @strawberry.federation.field(description="ABC")
        def e(self, info: Info) -> str:
            return ""

        @strawberry.federation.field(name="f")
        def f_resolver(self, info) -> str:
            return ""

    reveal_type(Example.a)
    reveal_type(Example.b)
    reveal_type(Example.c)
    reveal_type(Example.d)
    reveal_type(Example.e)
    reveal_type(Example.f_resolver)
  out: |
    main:25: note: Revealed type is "builtins.str"
    main:26: note: Revealed type is "builtins.str"
    main:27: note: Revealed type is "builtins.str"
    main:28: note: Revealed type is "builtins.str"
    main:29: note: Revealed type is "Any"
    main:30: note: Revealed type is "Any"

- case: test_private_field
  main: |
    import strawberry

    @strawberry.type
    class User:
        age: strawberry.Private[int]

        @strawberry.field
        def age_in_months(self) -> int:
            return self.age * 12

        @strawberry.field
        def wrong_type(self) -> int:
            reveal_type(self.age)
            return self.age.trim()
  out: |
    main:13: note: Revealed type is "builtins.int"
    main:14: error: "int" has no attribute "trim"  [attr-defined]

- case: test_field_with_default_before_non_default
  main: |
    import strawberry

    @strawberry.type
    class Example:
        a: str = "ABC"
        b: str

  out: |

- case: test_using_strawberry_field_does_not_break
  main: |
    import strawberry

    @strawberry.type
    class Example:
        a: str = strawberry.federation.field(description="Example")
        b: str

    reveal_type(Example.a)
  out: |
    main:8: note: Revealed type is "builtins.str"

- case: test_does_not_put_fields_with_resolver_in_init
  main: |
    import strawberry

    def resolver() -> str:
        return "hi"

    @strawberry.type
    class Example:
        a: str = strawberry.federation.field(description="Example")
        b: str = strawberry.federation.field(resolver=resolver)
        c: str

    i = Example(a="a", c="c")

    reveal_type(i.a)
  out: |
    main:14: note: Revealed type is "builtins.str"
